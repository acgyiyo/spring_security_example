<?xml version="1.0" encoding="UTF-8"?>

<!-- colocando doble beans(beans:beans) se dice que es el default esquema, 
	ademas hacemos default el spring security tambien -->
<beans:beans
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


	<http auto-config="true">
<!-- se coloca un interceptor de url y el ptaron usado es ()"And pattern"->/** ) el cual indica que rutas seran interceptadas -->
		<intercept-url pattern="/**" access="ROLE_USER" />
	
<!--este interceptor nos permite decir que cualquiera puede entrar a nuestro login-->
		<intercept-url pattern="/login.html" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		
<!-- con esta linea estamos diciendo que vamos a tener un formulario para el login de lo contrario spring nos proveería uno basico -->
		<form-login login-page="/login.html"/>
		 
	</http>

	<!-- con esto ya tenemos configurada toda la app (incluido un login) para que sea segura, en 
		cada p+agina que se acceda que este filtrando la wildcard de arriba, tenemosm 
		seguridad con el rol ROLE_USER  esta es la manera estatica de hacerlo, pero se puede hacer con conexción a BD, la vemos mas abajo-->
<!-- 	<authentication-manager> -->
<!-- 		<authentication-provider> -->
<!-- 			<user-service> -->
<!-- 				<user name="alejo" password="secret" authorities="ROLE_USER"/> -->
<!-- 			</user-service> -->
<!-- 		</authentication-provider> -->
<!-- 	</authentication-manager> -->

<!-- aqui con DB-->
	<authentication-manager>
		<authentication-provider>
<!-- 		con esta linea bnasta para decir que la contraseña va a pasar una encriptación ya sea hash md5, o en este caso bCrypt-->
		<password-encoder hash="bcrypt"/>
			<jdbc-user-service data-source-ref="dataSource"/>
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<beans:property name="url" value="jdbc:mysql://localhost:3306/fitnessTracker?autoReconnect=true"/>
		<beans:property name="username" value="root"/>
		<beans:property name="password" value="aeado250"/>
	</beans:bean>
	
	
<!-- 	<beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl"> -->
<!-- 		<beans:property name="dataSource" ref="dataSource"></beans:property> -->
<!-- 	</beans:bean> -->
	
</beans:beans>
